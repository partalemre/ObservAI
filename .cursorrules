# Cursor Rules for ObservAI

## Goals
- Keep a clean, typed monorepo (Next.js + NestJS + FastAPI).
- Prefer TypeScript everywhere (Python only for AI).
- Maintain strict module boundaries and shared types via packages/types.

## Style
- TypeScript strict mode on.
- Enforce ESLint + Prettier from packages/config.
- Use Zod or class-validator for DTO validation.
- For React: functional components, hooks, server actions when possible.

## Architecture
- API routes must return typed DTOs (packages/types).
- All external integrations via provider modules (POS, camera).
- Use Prisma for DB; no raw SQL unless justified.
- Web consumes API from NEXT_PUBLIC_API_URL; use SWR/tanstack-query.
- Realtime via WebSocket gateway (NestJS) for live metrics.

## Testing
- Unit tests per module (`__tests__`).
- Postman collection for integration.
- Avoid flaky e2e in early MVP; keep them minimal.

## Prompts
- When generating code, prefer minimal viable scaffolds with TODOs.
- Create stubs with clear “IMPLEMENT” comments for teammates.
